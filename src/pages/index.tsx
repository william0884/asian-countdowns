import { type NextPage } from "next";
import Head from "next/head";
import Image from 'next/image';
import { signIn, signOut, useSession } from "next-auth/react";
import Countdown from 'react-countdown';

import MyGif from '../../public/plane.gif';
import { api } from "../utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  //const timer = <Countdown date={Date.now() + 10000} />
  const leavetime = Date.parse('12 april 2023')
  const timer = <Countdown date={leavetime} />
  


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-[#634A43]">
        <div className="container flex flex-col items-center justify-left gap-12 px-4 py-16 ">
          <h1 className="text-5xl text-[#31CBD3] sm:text-[5rem]">
          Time till  trip:
          </h1>
          <h1 className="text-5xl text-[#98E7E7] sm:text-[5rem]">
          {timer}
            
          </h1>
          <Image src={MyGif} alt="my gif" />

            <AuthShowcase />
          </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();
  const leavetime = Date.parse('12 april 2023')
  const timer = <Countdown date={leavetime} />  

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
